{"version":3,"sources":["reducers/statics.js","reducers/index.js","store.js","App.jsx","reportWebVitals.js","index.js"],"names":["initialState","update_date_time","local_new_cases","local_total_cases","local_total_number_of_individuals_in_hospitals","local_deaths","local_new_deaths","local_recovered","local_active_cases","global_new_cases","global_total_cases","global_deaths","global_new_deaths","global_recovered","total_pcr_testing_count","daily_pcr_testing_data","total_antigen_testing_count","daily_antigen_testing_data","hospital_data","staticsReducer","state","action","type","payload","combineReducers","statics","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Homepage","lazy","history","createBrowserHistory","App","fallback","className","exact","path","component","props","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+OAAMA,EAAe,CACnBC,iBAAkB,KAClBC,gBAAiB,KACjBC,kBAAmB,KACnBC,+CAAgD,KAChDC,aAAc,KACdC,iBAAkB,KAClBC,gBAAiB,KACjBC,mBAAoB,KACpBC,iBAAkB,KAClBC,mBAAoB,KACpBC,cAAe,KACfC,kBAAmB,KACnBC,iBAAkB,KAClBC,wBAAyB,KACzBC,uBAAwB,GACxBC,4BAA6B,KAC7BC,2BAA4B,GAC5BC,cAAe,IAYFC,EATQ,WAAmC,IAAlCC,EAAiC,uDAAzBpB,EAAcqB,EAAW,uCACvD,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,2BAAKF,GAAUC,EAAOE,SAC/B,QACE,OAAOH,ICvBEI,cAAgB,CAC7BC,QAASN,ICQIO,EARDC,YACZC,EACAC,YACEC,YAAgBC,KAChBC,OAAOC,8BAAgCD,OAAOC,iCCD5CC,G,MAAWC,gBAAK,kBAAM,wDAEtBC,EAAUC,cAuBDC,E,uKAlBP,OACI,cAAC,IAAD,CAAUZ,MAAOA,EAAjB,SACG,cAAC,IAAD,CAAQU,QAASA,EAAjB,SACG,cAAC,WAAD,CAAUG,SAAU,qBAAKC,UAAU,oBAAnC,SACI,cAAC,IAAD,UACA,cAAC,IAAD,CACMC,OAAK,EACLC,KAAK,IACLC,UAAW,SAACC,GAAD,OAAW,cAACV,EAAD,eAAcU,mB,GAX9CC,aCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OAAQ,cAAC,EAAD,IACfC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.77f6a895.chunk.js","sourcesContent":["const initialState = {\n  update_date_time: null,\n  local_new_cases: null,\n  local_total_cases: null,\n  local_total_number_of_individuals_in_hospitals: null,\n  local_deaths: null,\n  local_new_deaths: null,\n  local_recovered: null,\n  local_active_cases: null,\n  global_new_cases: null,\n  global_total_cases: null,\n  global_deaths: null,\n  global_new_deaths: null,\n  global_recovered: null,\n  total_pcr_testing_count: null,\n  daily_pcr_testing_data: [],\n  total_antigen_testing_count: null,\n  daily_antigen_testing_data: [],\n  hospital_data: [],\n};\n\nconst staticsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"STATICS\":\n      return { ...state, ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default staticsReducer;\n","import { combineReducers } from \"redux\";\nimport staticsReducer from \"./statics\";\n\nexport default combineReducers({\n  statics: staticsReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import React, { Component,Suspense,lazy } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './assets/css/theme.min.css';\nconst Homepage = lazy(() => import('./components/pages/Homepage'));\n\nconst history = createBrowserHistory();\n\nclass App extends Component {\n \n    render() { \n        return ( \n            <Provider store={store}>\n               <Router history={history}>\n                  <Suspense fallback={<div className=\"loading-spinner\" />}>\n                      <Switch>\n                      <Route\n                            exact\n                            path=\"/\"\n                            component={(props) => <Homepage {...props} />}\n                        />\n                      </Switch>\n                  </Suspense>\n               </Router>\n            </Provider>\n         );\n    }\n}\n \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}